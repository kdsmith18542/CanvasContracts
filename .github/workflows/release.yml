name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cargo install wasm-pack
        cargo install wasmtime-cli
        if [ -f "package.json" ]; then
          npm ci
        fi

    - name: Build Rust backend
      run: |
        cargo build --release
        if [ -f "contracts/Cargo.toml" ]; then
          cd contracts
          wasm-pack build --target web --release
          cd ..
        fi

    - name: Build frontend
      run: |
        if [ -f "package.json" ] && npm run build --if-present; then
          npm run build
        fi

    - name: Create release assets
      run: |
        mkdir -p release
        cp -r target/release/* release/ 2>/dev/null || true
        cp -r contracts/pkg/* release/ 2>/dev/null || true
        cp -r dist/* release/ 2>/dev/null || true
        cp -r build/* release/ 2>/dev/null || true
        cp -r docs/* release/ 2>/dev/null || true
        
        # Create platform-specific builds
        tar -czf canvas-contracts-linux-x64.tar.gz release/
        zip -r canvas-contracts-windows-x64.zip release/
        tar -czf canvas-contracts-macos-x64.tar.gz release/

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Canvas Contracts ${{ github.ref_name }}
        body: |
          ## Canvas Contracts ${{ github.ref_name }}
          
          ### What's New
          - Visual smart contract development platform
          - WASM compilation pipeline
          - BaaLS integration
          - Cross-platform desktop application
          
          ### Downloads
          - **Linux**: `canvas-contracts-linux-x64.tar.gz`
          - **Windows**: `canvas-contracts-windows-x64.zip`
          - **macOS**: `canvas-contracts-macos-x64.tar.gz`
          
          ### Installation
          1. Extract the archive for your platform
          2. Run the executable
          3. Start building visual smart contracts!
          
          ### Documentation
          See the [README](https://github.com/kdsmith18542/CanvasContracts#readme) for detailed instructions.
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./canvas-contracts-linux-x64.tar.gz
        asset_name: canvas-contracts-linux-x64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./canvas-contracts-windows-x64.zip
        asset_name: canvas-contracts-windows-x64.zip
        asset_content_type: application/zip

    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./canvas-contracts-macos-x64.tar.gz
        asset_name: canvas-contracts-macos-x64.tar.gz
        asset_content_type: application/gzip

  publish-crates:
    name: Publish Crates
    runs-on: ubuntu-latest
    needs: build-and-release
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Publish to crates.io
      uses: actions-rs/cargo@v1
      with:
        command: publish
        args: --token ${{ secrets.CARGO_TOKEN }}
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}

  publish-npm:
    name: Publish NPM Package
    runs-on: ubuntu-latest
    needs: build-and-release
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 